let scene=new THREE.Scene,camera=(scene.background=new THREE.Color(16777215),new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3)),renderer=new THREE.WebGLRenderer({powerPreference:"high-performance",antialias:!1,depth:!1,stencil:!1}),ambientLight=(renderer.setSize(window.innerWidth,window.innerHeight),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),renderer.outputEncoding=THREE.sRGBEncoding,renderer.toneMapping=THREE.NoToneMapping,document.querySelector(".corridor").appendChild(renderer.domElement),new THREE.AmbientLight(16777215,.9)),keyLight=(scene.add(ambientLight),new THREE.DirectionalLight(16777215,.5)),fillLight=(keyLight.position.set(5,8,5),keyLight.castShadow=!0,scene.add(keyLight),new THREE.DirectionalLight(16777215,.5)),initialAngle=(fillLight.position.set(-5,1,5),scene.add(fillLight),Math.PI/4),radius=15,currentAngle=initialAngle,targetAngle=initialAngle,currentY=0,targetY=0,mouseX=(camera.position.set(5,0,5),camera.lookAt(0,0,0),0),mouseY=0,windowHalfX=window.innerWidth/2,windowHalfY=window.innerHeight/2,emissiveColors=(document.addEventListener("mousemove",e=>{mouseX=(e.clientX-windowHalfX)/windowHalfX,mouseY=(e.clientY-windowHalfY)/windowHalfY,targetAngle=initialAngle+.35*-mouseX,targetY=1.5*-mouseY}),{screen:new THREE.Color(65280),lamp:new THREE.Color(16755200),light:new THREE.Color(16777215),default:new THREE.Color(16777215)}),loader=new THREE.GLTFLoader,renderScene=(loader.load("./assets/images/scene.gltf",e=>{e=e.scene;e.traverse(n=>{if(n.isMesh&&(n.castShadow=!0,n.receiveShadow=!0,n.material)){let e=emissiveColors.default;for(var[i,r]of Object.entries(emissiveColors))if(n.name.toLowerCase().includes(i)){e=r;break}var o=new THREE.MeshStandardMaterial({color:n.material.color,map:n.material.map,emissive:e,emissiveIntensity:0,roughness:5,metalness:.125});n.material.map&&(o.map.encoding=THREE.sRGBEncoding,o.map.flipY=!1),n.material=o}});var n=(new THREE.Box3).setFromObject(e).getCenter(new THREE.Vector3);e.position.sub(n),scene.add(e),document.querySelector(".loading").style.display="none"}),new THREE.RenderPass(scene,camera)),bloomPass=new THREE.UnrealBloomPass(new THREE.Vector2(window.innerWidth,window.innerHeight),2,.25,.5),FilmGrainShader={uniforms:{tDiffuse:{value:null},time:{value:0},amount:{value:.015},speed:{value:2},size:{value:1}},vertexShader:`
    varying vec2 vUv;
    void main() {
      vUv = uv;
      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
    }
  `,fragmentShader:`
    uniform float time;
    uniform float amount;
    uniform float speed;
    uniform float size;
    uniform sampler2D tDiffuse;
    varying vec2 vUv;
    float random(vec2 co){
      return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
    }
      void main(){
      vec4 color = texture2D(tDiffuse, vUv);
      vec2 position = vUv;
      position *= size;
      float grain = random(position * time * speed);
      color.rgb += grain * amount;
      gl_FragColor = color;
      }
  `},filmGrainPass=new THREE.ShaderPass(FilmGrainShader),composer=(filmGrainPass.renderToScreen=!0,new THREE.EffectComposer(renderer));function lerp(e,n,i){return e+(n-e)*i}function animate(){requestAnimationFrame(animate),filmGrainPass.uniforms.time.value=.001*performance.now(),currentAngle=lerp(currentAngle,targetAngle,.025),currentY=lerp(currentY,targetY,.025),camera.position.x=radius*Math.cos(currentAngle),camera.position.z=radius*Math.sin(currentAngle),camera.position.y=lerp(camera.position.y,currentY,.05),camera.lookAt(0,0,0),composer.render()}function onWindowResize(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight),composer.setSize(window.innerWidth,window.innerHeight)}composer.addPass(renderScene),composer.addPass(bloomPass),composer.addPass(filmGrainPass),window.addEventListener("resize",onWindowResize,!1),animate();